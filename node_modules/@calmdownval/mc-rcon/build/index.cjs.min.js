"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t,e,n=require("@calmdownval/signal"),i=require("net");function o(t,e,n,i){return new(n||(n=Promise))((function(o,s){function r(t){try{d(i.next(t))}catch(t){s(t)}}function c(t){try{d(i.throw(t))}catch(t){s(t)}}function d(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,c)}d((i=i.apply(t,e||[])).next())}))}function s(t){if(!t.isConnected)throw new Error("RConSocket not connected")}!function(t){t[t.AUTH=3]="AUTH",t[t.COMMAND=2]="COMMAND",t[t.COMMAND_TX=100]="COMMAND_TX"}(t||(t={})),function(t){t[t.AUTH=2]="AUTH",t[t.COMMAND=0]="COMMAND"}(e||(e={}));let r=0;function c(){return 65535*Math.random()<<15|(r=32767&++r)}class d{constructor(){this.socket=new i.Socket,this.error=n.create(),this.message=n.create(),this._isConnected=!1,this._isDrained=!0,this.onClose=()=>{this._isConnected=!1},this.onData=t=>{let e;this._data=this._data?Buffer.concat([this._data,t]):t;try{e=function(t){const e=t.readInt32LE(0);if(t.length!==e+4||0!==t.readInt16LE(e+2))throw new Error("invalid packet length");return{id:t.readInt32LE(4),kind:t.readInt32LE(8),payload:t.toString("ascii",12,e+2)}}(this._data),this._data=void 0}catch(t){return}this.message(e)},this.onDrain=()=>{this._isDrained=!0},this.socket.on("close",this.onClose).on("data",this.onData).on("drain",this.onDrain).on("error",this.error)}get isConnected(){return this._isConnected}connect(t,e=25575){return o(this,void 0,void 0,(function*(){return function(t){if(t.isConnected)throw new Error("RConSocket already connected")}(this),new Promise(((n,i)=>{this.socket.connect({host:t,port:e}).on("error",i).once("connect",(()=>{this.socket.off("error",i),this._isConnected=!0,n()}))}))}))}close(){return this._isConnected?new Promise((t=>this.socket.end(t))):Promise.resolve()}send(t){return o(this,void 0,void 0,(function*(){s(this),yield this.drain(),yield this.write(function({id:t,kind:e,payload:n}){const i=Buffer.byteLength(n,"ascii")+14,o=Buffer.allocUnsafe(i);return o.writeInt32LE(i-4,0),o.writeInt32LE(t,4),o.writeInt32LE(e,8),o.write(n,12,"ascii"),o.writeInt16LE(0,i-2),o}(t))}))}receive(t,e={}){return o(this,void 0,void 0,(function*(){return s(this),new Promise(((i,o)=>{let s;const r=()=>{clearTimeout(s),n.off(this.message,c)},c=e=>{e.id===t&&(r(),i(e))};n.on(this.message,c);const{cancel:d,timeout:a=5e3}=e;d&&n.once(d,r),a>0&&(s=setTimeout((()=>{r(),o(new Error("receive timed out"))}),a))}))}))}drain(){return this._isDrained?Promise.resolve():new Promise((t=>{this.socket.once("drain",t)}))}write(t){return new Promise(((e,n)=>{this._isDrained=this.socket.write(t,(t=>{t?n(t):e()}))}))}}exports.Client=class{constructor(){this.socket=new d,this._isLoggedIn=!1,this.timeout=5e3}get isConnected(){return this.socket.isConnected}get isLoggedIn(){return this._isLoggedIn}connect(t,e){return this.socket.connect(t,e)}close(){return this.socket.close()}login(e){return o(this,void 0,void 0,(function*(){s(this.socket),function(t){if(t.isLoggedIn)throw new Error("Client already logged in")}(this);const i=c(),o={cancel:n.create(),timeout:this.timeout},r=[this.socket.receive(-1,o),this.socket.receive(i,o)];this.socket.send({id:i,kind:t.AUTH,payload:e});const d=yield Promise.race(r);if(o.cancel(),-1===d.id)throw new Error("invalid password");this._isLoggedIn=!0}))}exec(e){return o(this,void 0,void 0,(function*(){s(this.socket),function(t){if(!t.isLoggedIn)throw new Error("Client not logged in")}(this);const i=c(),o=c();let r="";return n.on(this.socket.message,(t=>{t.id===i&&(r+=t.payload)})),this.socket.send({id:i,kind:t.COMMAND,payload:e}),this.socket.send({id:o,kind:t.COMMAND_TX,payload:""}),yield this.socket.receive(o,{timeout:this.timeout}),r}))}},exports.RConSocket=d;
